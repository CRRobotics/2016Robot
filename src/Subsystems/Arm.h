// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef ARM_H
#define ARM_H
#include "Commands/Subsystem.h"
#include "WPILib.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class Arm: public Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<AnalogPotentiometer> armPot;
	std::shared_ptr<CANTalon> armLift;
	std::shared_ptr<DigitalInput> armHallTop;
	std::shared_ptr<DigitalInput> armHallBot;
	double m_setPoint;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:

	enum Position {
		POS_DOWN = 0,
		POS_PORT = 1,
		POS_SALLY = 2,
		POS_DRAW = 3,
		POS_SCALE = 4
	};

	Arm();
	void InitDefaultCommand();
	void SetArmSpeed(double speed);
	void ArmDriveToPoint(double point);
	void ArmDriveToSetPoint();
	bool IsArmAtPoint(double point);
	bool IsArmAtSetPoint();
	void SetArmSetPoint(double point);
	bool IsArmTopLimit();
	bool IsArmBotLimit();
	double GetArmEnc();
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
};

#endif
