// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/Acquisition/AcquireBall.h"
#include "Commands/Arm/ArmSetPos.h"
#include "Commands/Drive/AutoDrive.h"
#include "Commands/Acquisition/EjectBall.h"
#include "Commands/Scaling/ExtendHook.h"
#include "Commands/Arm/JoystickArm.h"
#include "Commands/Drive/JoystickDrive.h"
#include "Commands/Arm/ResetArm.h"
#include "Commands/Scaling/ResetHook.h"
#include "Commands/Scaling/RetractHook.h"
#include "Commands/Arm/RunArmToPos.h"
#include "Commands/Drive/ShiftHigh.h"
#include "Commands/Drive/ShiftLow.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    cJoystick.reset(new Joystick(2));
    
    rJoystick.reset(new Joystick(1));
    
    lJoystick.reset(new Joystick(0));
    

    // SmartDashboard Buttons
    SmartDashboard::PutData("ResetArm", new ResetArm());
    SmartDashboard::PutData("ResetHook", new ResetHook());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getlJoystick() {
   return lJoystick;
}

std::shared_ptr<Joystick> OI::getrJoystick() {
   return rJoystick;
}

std::shared_ptr<Joystick> OI::getcJoystick() {
   return cJoystick;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

double OI::GetYLeft(){
	return lJoystick->GetY();
}

double OI::GetYRight(){
	return rJoystick->GetY();
}
